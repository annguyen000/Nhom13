@model WebApplication1.Models.Order

@{
    ViewData["Title"] = "Tạo đơn hàng mới";
}

<div class="container-fluid">
    <h1>@ViewData["Title"]</h1>

    <form asp-action="Create" id="orderForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Code" class="control-label">Mã đơn hàng</label>
                    <input asp-for="Code" class="form-control" />
                    <span asp-validation-for="Code" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="SupplierId" class="control-label">Nhà cung cấp</label>
                    <select asp-for="SupplierId" class="form-control">
                        <option value="">-- Chọn nhà cung cấp --</option>
                        @foreach (var supplier in ViewBag.Suppliers)
                        {
                            <option value="@supplier.Id">@supplier.Name</option>
                        }
                    </select>
                    <span asp-validation-for="SupplierId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ExpectedDeliveryDate" class="control-label">Ngày giao dự kiến</label>
                    <input asp-for="ExpectedDeliveryDate" class="form-control" type="date" />
                    <span asp-validation-for="ExpectedDeliveryDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Notes" class="control-label">Ghi chú</label>
                    <textarea asp-for="Notes" class="form-control"></textarea>
                    <span asp-validation-for="Notes" class="text-danger"></span>
                </div>
            </div>
        </div>

        <h3 class="mt-4">Chi tiết đơn hàng</h3>
        <div class="table-responsive">
            <table class="table table-bordered" id="orderDetailsTable">
                <thead>
                    <tr>
                        <th>Sản phẩm</th>
                        <th>Số lượng</th>
                        <th>Đơn giá</th>
                        <th>Thành tiền</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Order details will be added here dynamically -->
                </tbody>
            </table>
        </div>

        <button type="button" class="btn btn-info mb-3" onclick="addOrderDetail()">
            <i class="fas fa-plus"></i> Thêm sản phẩm
        </button>

        <div class="form-group mt-4">
            <input type="submit" value="Tạo đơn hàng" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-secondary">Quay lại</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        let products = @Html.Raw(Json.Serialize(ViewBag.Products));
        let detailIndex = 0;

        function addOrderDetail() {
            let template = `
                <tr>
                    <td>
                        <select name="OrderDetails[${detailIndex}].ProductId" class="form-control product-select" onchange="updateUnitPrice(this)">
                            <option value="">-- Chọn sản phẩm --</option>
                            ${products.map(p => `<option value="${p.id}" data-price="${p.price}">${p.name}</option>`).join('')}
                        </select>
                    </td>
                    <td>
                        <input type="number" name="OrderDetails[${detailIndex}].Quantity" class="form-control quantity-input" value="1" min="1" onchange="updateAmount(this)"/>
                    </td>
                    <td>
                        <input type="number" name="OrderDetails[${detailIndex}].UnitPrice" class="form-control unit-price-input" readonly/>
                    </td>
                    <td>
                        <input type="number" name="OrderDetails[${detailIndex}].Amount" class="form-control amount-input" readonly/>
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeOrderDetail(this)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;
            
            $('#orderDetailsTable tbody').append(template);
            detailIndex++;
        }

        function updateUnitPrice(select) {
            let row = $(select).closest('tr');
            let selectedOption = $(select).find('option:selected');
            let price = selectedOption.data('price') || 0;
            
            row.find('.unit-price-input').val(price);
            updateAmount(row.find('.quantity-input'));
        }

        function updateAmount(input) {
            let row = $(input).closest('tr');
            let quantity = parseFloat(row.find('.quantity-input').val()) || 0;
            let unitPrice = parseFloat(row.find('.unit-price-input').val()) || 0;
            let amount = quantity * unitPrice;
            
            row.find('.amount-input').val(amount);
        }

        function removeOrderDetail(button) {
            $(button).closest('tr').remove();
        }

        // Add first row by default
        $(document).ready(function() {
            addOrderDetail();
        });

        // Form validation
        $('#orderForm').submit(function(e) {
            let details = $('#orderDetailsTable tbody tr');
            if (details.length === 0) {
                e.preventDefault();
                alert('Vui lòng thêm ít nhất một sản phẩm vào đơn hàng');
                return false;
            }

            let isValid = true;
            details.each(function() {
                let productId = $(this).find('.product-select').val();
                if (!productId) {
                    e.preventDefault();
                    alert('Vui lòng chọn sản phẩm cho tất cả các dòng');
                    isValid = false;
                    return false;
                }
            });

            return isValid;
        });
    </script>
} 