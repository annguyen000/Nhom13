@model IEnumerable<Nhom13.Models.Expense>

@{
    ViewData["Title"] = "Báo cáo chi phí";
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
    var expensesByType = ViewBag.ExpensesByType as dynamic;
    var totalExpenses = ViewBag.TotalExpenses as decimal?;
    
    string GetExpenseTypes()
    {
        var types = new List<string>();
        foreach (var expense in expensesByType)
        {
            types.Add($"'{expense.Type}'");
        }
        return string.Join(",", types);
    }
    
    string GetExpenseAmounts()
    {
        var amounts = new List<decimal>();
        foreach (var expense in expensesByType)
        {
            amounts.Add(expense.TotalAmount);
        }
        return string.Join(",", amounts);
    }
}

<div class="container-fluid">
    <h1 class="mt-4">@ViewData["Title"]</h1>

    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Biểu đồ chi phí theo loại
                </div>
                <div class="card-body">
                    <canvas id="expensesPieChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Biểu đồ chi phí theo ngày
                </div>
                <div class="card-body">
                    <canvas id="expensesBarChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Chi tiết chi phí
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-12">
                    <div class="alert alert-info">
                        <strong>Tổng chi phí:</strong> @totalExpenses?.ToString("N0") VNĐ
                        <br />
                        <strong>Thời gian:</strong> Từ @startDate?.ToString("dd/MM/yyyy") đến @endDate?.ToString("dd/MM/yyyy")
                    </div>
                </div>
            </div>

            <table id="expensesTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Type)</th>
                        <th>@Html.DisplayNameFor(model => model.Description)</th>
                        <th>@Html.DisplayNameFor(model => model.Amount)</th>
                        <th>@Html.DisplayNameFor(model => model.Date)</th>
                        <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Type)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td>@item.Amount.ToString("N0") VNĐ</td>
                            <td>@item.Date.ToString("dd/MM/yyyy")</td>
                            <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Pie Chart
        var pieCtx = document.getElementById('expensesPieChart');
        new Chart(pieCtx, {
            type: 'pie',
            data: {
                labels: [@Html.Raw(GetExpenseTypes())],
                datasets: [{
                    data: [@GetExpenseAmounts()],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)',
                        'rgba(255, 206, 86, 0.5)',
                        'rgba(75, 192, 192, 0.5)'
                    ]
                }]
            }
        });

        // Bar Chart
        var barCtx = document.getElementById('expensesBarChart');
        var expenses = @Html.Raw(Json.Serialize(Model));
        var dailyExpenses = {};
        for (var i = 0; i < expenses.length; i++) {
            var date = expenses[i].date.split('T')[0];
            dailyExpenses[date] = (dailyExpenses[date] || 0) + expenses[i].amount;
        }

        new Chart(barCtx, {
            type: 'bar',
            data: {
                labels: Object.keys(dailyExpenses),
                datasets: [{
                    label: 'Chi phí theo ngày',
                    data: Object.values(dailyExpenses),
                    backgroundColor: 'rgba(54, 162, 235, 0.5)'
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // DataTable
        $(document).ready(function () {
            $('#expensesTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Vietnamese.json"
                }
            });
        });
    </script>
} 